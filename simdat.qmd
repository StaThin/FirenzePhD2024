---
title: "DAG structure learning"
author: "G. Marchetti"
date: "21 10 2024"
format: 
  html:
    embed-resources: true
  pdf:
    documentclass: scrartcl
    number-sections: false
    colorlinks: true
    include-in-header: 
      text: | 
        \usepackage[default]{fontsetup} 
---

```{=tex}
\DeclareMathAlphabet{\mathcal}{OMS}{cmsy}{m}{n}
\setmathfont{NewCMMath-Regular.otf}
\newcommand{\ci}{\hspace{0.1em}\perp\hspace{-0.95em}\perp\, }
\renewcommand{\b}[1]{\boldsymbol{#1}}
```
```{r}
#| include: false
#| message: false
source("~/Documents/R_packages/cat_regression_chains/RCG/funs_RCG.R")
library("bnlearn") 
library("ggm")
library("mvtnorm")
```
# Data on six simulated variables 

The true generating process is unknown
```{r}
#| include: false
D <- diag(c(2, 2, 2, 0.5, 1, 1))
a1 <- 0.5
a2 <- -0.8
a3 <- -0.9
a4 <- 0.5
a5 <- 0.7
a6 <- 0.6
#     x3    x6    x1    x2   x4   x5
nam <-  c("x3", "x6", "x1", "x2", "x4", "x5")
A <- matrix(
  c(
    1, -a1, 0, -a2,   0,   0,
    0, 1, -a3,   0,   0, -a4,
    0, 0,   1, -a5, -a6,   0,
    0, 0,   0,   1,   0,   0,
    0, 0,   0,   0,   1,   0,
    0, 0,   0,   0,   0,   1
  ),
  byrow = TRUE, 6, 6
)
dimnames(A) <- list(nam, nam)
O <- t(A) %*% solve(D) %*% A
S <- solve(O)
require(mvtnorm)
set.seed(250)
n <- 500
X <- rmvnorm(n = n, sigma = S)
X <- data.frame(X)
colnames(X) <-nam 
X <- X[, c(3, 4, 1, 5, 6, 2)]

su <- apply(X, 2, function(x) rbind(mean(x), sd(x)))
rownames(su) <- c("mean", "sd")
print(round(su, 3))
```

```{r}
#| include: false
D <- t((0 + (abs(A)> 0)) - diag(6))
co0 <- structure(c(9, 32, 65, 90, 95, 
                  61, 77, 51, 50, 80, 
                  21, 20), dim = c(6L, 2L))
drawGraph(D, coor = co0)
```
## The data set
```{r}
#| fig-width: 6
#| fig-height: 6
#| out-width: "50%"
source("simdat.R")

pairs(simdat,  pch = 1, cex = .5)
```
```{r}
su <- apply(simdat, 2, function(x) rbind(mean(x), sd(x)))
rownames(su) <- c("mean", "sd")
print(round(su, 3))
round(cor(simdat), 3)
```
## Structure learning 

Hill climbing
```{r}
#| fig-width: 6
#| fig-height: 6
#| out-width: "50%"
out <- hc(X, score = "bic-g", debug = FALSE)
f <- modelstring(out)
f
plot(model2network(f))
```


## True DAG

```{r}
#| echo: false
drawGraph(D, coor = co0)
```

```{r}
#| fig-width: 6
#| fig-height: 6
#| out-width: "50%"
pc <- pc.stable(X, test = "cor", undirected = FALSE)
plot(pc)
```

# Find just an undirected graph 

```{r}
round(correlations(cov(X)), 3)
```